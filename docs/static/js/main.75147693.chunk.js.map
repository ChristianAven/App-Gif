{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","protoType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","categorie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAYvC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAc,CAACE,IACfC,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAQR,EACRS,SAdc,SAAEN,GAAQF,EAAcE,EAAEO,OAAOF,aAoB/DX,EAAYc,UAAY,CACpBb,c,OAAec,EAAUC,KAAKC,YAGnBjB,Q,8BC9BFkB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0DAE4CC,UAAWH,GAFvD,sDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCYLO,EAVK,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC3B,OAEI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCcDO,EAjBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EAEZjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG3B,CAACpB,IAEIqB,EDf0BK,CAAa1B,GAAjCa,EAFiB,EAEvBN,KAAca,EAFS,EAETA,QAErB,OACI,qCACA,6BAAMpB,IACJoB,GAAW,8CACb,qBAAKJ,UAAU,aAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OAAK,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEU/CgB,EApBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,gBAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ8C,EAAWnB,KAAI,SAAAoB,GACX,OAAO,cAAC,EAAD,CAAyB7B,SAAU6B,GAArBA,Y,MCX7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.75147693.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = ( e ) => {setInputValue(e.target.value)}\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategories([inputValue]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={handleInputChange} \r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI( category )}&api_key=85w8k3MmDJeKpUhiJ22fYBwQ1xCSPRuG`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nconst GifGridItem = ( { title, url} ) => {\r\n    return (\r\n        \r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const {data: images, loading } = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n        { loading && <p>Cargando gifs</p> }\r\n        <div className='card-grid '>\r\n                {\r\n                    images.map( img =>  <GifGridItem key={img.id} {...img} />)\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            })\r\n    },[category] )\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />        \r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(categorie => {\r\n                        return <GifGrid key={categorie} category={categorie}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}